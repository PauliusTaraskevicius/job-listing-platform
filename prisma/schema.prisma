// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id          String  @id @default(uuid())
  clerkUserId String  @unique
  email       String  @unique
  firstName   String?
  lastName    String?
  imageUrl    String? @db.Text
  role        Role    @default(USER)

  job      Job[]
  category Category[]
  city     City[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id    String @id @default(uuid())
  title String @db.Text

  job Job[]

  creatorId String
  creator   User   @relation(fields: [creatorId], references: [clerkUserId], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([creatorId])
}

model City {
  id    String @id @default(uuid())
  title String @db.Text
  job Job[]

  creatorId String
  creator   User   @relation(fields: [creatorId], references: [clerkUserId], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([creatorId])
}

model Job {
  id          String   @id @default(uuid())
  title       String   @db.Text
  company     String   @db.Text
  description String   @db.Text
  tags        String[]
  premium     Boolean  @default(false)
  remote      Boolean? @default(false)

  authorId String
  author   User   @relation(fields: [authorId], references: [id], onDelete: Cascade)

  categoryId String
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  locationId String
  location   City   @relation(fields: [locationId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([categoryId])
  @@index([authorId])
  @@index([locationId])
}
